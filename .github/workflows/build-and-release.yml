name: Build & Release Kivy APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            zip unzip git wget curl python3-dev python3-pip \
            openjdk-17-jdk \
            zlib1g-dev libffi-dev libssl-dev \
            libncurses5 libncurses5-dev libtinfo5 \
            libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev \
            libjpeg-dev libpng-dev libfreetype6-dev \
            libblas-dev liblapack-dev

      - name: Upgrade pip & install buildozer
        run: |
          python -m pip install --upgrade pip wheel setuptools cython
          pip install buildozer

      - name: Cache .buildozer
        uses: actions/cache@v4
        with:
          path: .buildozer
          key: buildozer-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            buildozer-${{ runner.os }}-

      - name: Build debug APK
        env:
          LC_ALL: C.UTF-8
          LANG: C.UTF-8
        run: |
          buildozer android clean || true
          buildozer -v android debug

      - name: Locate APK
        id: find_apk
        shell: bash
        run: |
          set -e
          APK=$(ls -1 bin/*.apk .buildozer/android/platform/build-*/dists/*/*.apk 2>/dev/null | head -n1)
          if [[ -z "$APK" ]]; then
            echo "No APK found!" >&2
            exit 1
          fi
          echo "apk_path=$APK" >> "$GITHUB_OUTPUT"
          echo "Found: $APK"

      - name: Upload as artifact
        uses: actions/upload-artifact@v4
        with:
          name: FreyjaBeta-debug-apk
          path: ${{ steps.find_apk.outputs.apk_path }}
          if-no-files-found: error

      - name: Create GitHub Release (prerelease)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: "Auto build #${{ github.run_number }}"
          prerelease: true
          files: ${{ steps.find_apk.outputs.apk_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

