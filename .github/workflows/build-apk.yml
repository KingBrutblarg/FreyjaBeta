name: Build & Release APK

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write   # necesario si usas el paso de GitHub Release

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: "34.0.0"
          ndk: 25.1.8937393
          cmdline-tools: latest

      - name: Configure Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: Create local.properties (point SDK)
        run: echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties

      # 🔑 Decodifica el keystore desde el secret (PKCS12)
      - name: Decode keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > freyja-release.p12

      # 🧩 Inyecta credenciales en gradle.properties en tiempo de build
      - name: Inject signing props
        run: |
          {
            echo "RELEASE_STORE_FILE=freyja-release.p12"
            echo "RELEASE_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}"
            echo "RELEASE_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}"
            echo "RELEASE_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}"
          } >> gradle.properties

- name: Decode keystore
  run: |
    mkdir -p app
    printf '%s' "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" \
    | tr -d '\r\n[:space:]' \
    | base64 -d > app/freyja-release.p12

      # 🏗️ Compila release firmado (usa signingConfigs del build.gradle.kts)
      - name: Build release APK (signed)
        run: ./gradlew --no-daemon :app:assembleRelease

      # 📦 Sube artefacto firmado
      - name: Upload signed APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-signed
          path: app/build/outputs/apk/release/*.apk
          if-no-files-found: error

      # 🎁 (Opcional) Crear GitHub Release con el APK firmado
      - name: Create GitHub Release (optional)
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: build-${{ github.run_number }}.${{ github.run_attempt }}
          name: "Freyja Release ${{ github.run_number }}"
          make_latest: true
          generate_release_notes: true
          files: app/build/outputs/apk/release/*.apk