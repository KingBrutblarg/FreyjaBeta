name: Build & Release APK

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: "34.0.0"
          ndk: 25.1.8937393
          cmdline-tools: latest

      - name: Configure Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: Create local.properties (point SDK)
        run: echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties

      # --- Firma: decodifica la keystore del secret y exporta ruta ---
      - name: Decode keystore from secret
        run: |
          printf '%s' "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > release.keystore
          echo "ANDROID_KEYSTORE_PATH=$PWD/release.keystore" >> $GITHUB_ENV

      # Debug APK (opcional)
      - name: Build debug APK
        run: ./gradlew --no-daemon :app:assembleDebug

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      # Release APK firmado
      - name: Build release APK (signed)
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: ./gradlew --no-daemon :app:assembleRelease

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/release/*.apk
          if-no-files-found: error

      # Publicar Release en GitHub con ambos APKs
      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.RELEASE_TOKEN }}
          tag_name: build-${{ github.run_number }}.${{ github.run_attempt }}
          name: "Release build ${{
            github.run_number }} (attempt ${{ github.run_attempt }})"
          make_latest: true
          generate_release_notes: true
          files: |
            app/build/outputs/apk/debug/*.apk
            app/build/outputs/apk/release/*.apk